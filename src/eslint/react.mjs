const rules = {
    'boolean-prop-naming': 2,
    'button-has-type': 2,
    'checked-requires-onchange-or-readonly': 2,
    'default-props-match-prop-types': 2,
    'destructuring-assignment': 2,
    'display-name': 2,
    'forbid-component-props': [2, { forbid: [] }],
    'forbid-dom-props': 2,
    'forbid-elements': 2,
    'forbid-foreign-prop-types': 2,
    'forbid-prop-types': 2,
    'forward-ref-uses-ref': 2,
    'function-component-definition': 2,
    'hook-use-state': 2,
    'iframe-missing-sandbox': 2,
    'jsx-boolean-value': 2,
    'jsx-child-element-spacing': 2,
    'jsx-closing-bracket-location': 2,
    'jsx-closing-tag-location': [2, 'line-aligned'],
    'jsx-curly-brace-presence': [2, { propElementValues: 'always' }],
    'jsx-curly-newline': [2, { multiline: 'require', singleline: 'forbid' }],
    'jsx-curly-spacing': 2,
    'jsx-equals-spacing': 2,
    'jsx-filename-extension': [2, { extensions: ['.jsx', '.tsx'] }],
    'jsx-first-prop-new-line': 2,
    'jsx-fragments': 2,
    'jsx-handler-names': 2,
    'jsx-indent': 2,
    'jsx-indent-props': 2,
    'jsx-key': 2,
    'jsx-max-depth': [2, { max: 5 }],
    'jsx-max-props-per-line': [2, { when: 'multiline' }],
    'jsx-newline': [2, { allowMultilines: true, prevent: true }],
    'jsx-no-bind': [2, { allowArrowFunctions: true }],
    'jsx-no-comment-textnodes': 2,
    'jsx-no-constructed-context-values': 2,
    'jsx-no-duplicate-props': 2,
    'jsx-no-leaked-render': 2,
    'jsx-no-literals': 0,
    'jsx-no-script-url': 2,
    'jsx-no-target-blank': 2,
    'jsx-no-undef': 2,
    'jsx-no-useless-fragment': 2,
    'jsx-one-expression-per-line': [2, { allow: 'non-jsx' }],
    'jsx-pascal-case': 2,
    'jsx-props-no-multi-spaces': 2,
    'jsx-props-no-spread-multi': 2,
    'jsx-props-no-spreading': 2,
    'jsx-sort-props': [2, { callbacksLast: true, reservedFirst: true }],
    'jsx-tag-spacing': [2, { beforeClosing: 'never' }],
    'jsx-uses-react': 2,
    'jsx-uses-vars': 2,
    'jsx-wrap-multilines': [2, { declaration: 'parens-new-line', return: 'parens-new-line' }],
    'no-access-state-in-setstate': 2,
    'no-adjacent-inline-elements': 2,
    'no-array-index-key': 2,
    'no-arrow-function-lifecycle': 2,
    'no-children-prop': 2,
    'no-danger': 2,
    'no-danger-with-children': 2,
    'no-deprecated': 2,
    'no-did-mount-set-state': 2,
    'no-did-update-set-state': 2,
    'no-direct-mutation-state': 2,
    'no-find-dom-node': 2,
    'no-invalid-html-attribute': 2,
    'no-is-mounted': 2,
    'no-multi-comp': [2, { ignoreStateless: true }],
    'no-namespace': 2,
    'no-object-type-as-default-prop': 2,
    'no-redundant-should-component-update': 2,
    'no-render-return-value': 2,
    'no-set-state': 2,
    'no-string-refs': 2,
    'no-this-in-sfc': 2,
    'no-typos': 2,
    'no-unescaped-entities': [2, { forbid: [] }],
    'no-unknown-property': 2,
    'no-unsafe': 2,
    'no-unstable-nested-components': 2,
    'no-unused-class-component-methods': 2,
    'no-unused-prop-types': 2,
    'no-unused-state': 2,
    'no-will-update-set-state': 2,
    'prefer-es6-class': 2,
    'prefer-exact-props': 2,
    'prefer-read-only-props': 2,
    'prefer-stateless-function': 2,
    'prop-types': 2,
    'react-in-jsx-scope': 2,
    'require-default-props': 2,
    'require-optimization': 2,
    'require-render-return': 2,
    'self-closing-comp': 2,
    'sort-comp': 2,
    'sort-default-props': 2,
    'sort-prop-types': 2,
    'state-in-constructor': 2,
    'static-property-placement': 2,
    'style-prop-object': 2,
    'void-dom-elements-no-children': 2,
};

export default Object.fromEntries(Object.entries(rules).map(e => [`react/${e[0]}`, e[1]]));
